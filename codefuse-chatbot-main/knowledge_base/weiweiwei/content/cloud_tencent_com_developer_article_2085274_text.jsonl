{"url": "https://cloud.tencent.com/developer/article/2085274", "host_url": "https://cloud.tencent.com", "title": "Python贪吃蛇 (完整代码+详细注释+粘贴即食）-腾讯云开发者社区-腾讯云", "all_text": "Python贪吃蛇 (完整代码+详细注释+粘贴即食）-腾讯云开发者社区-腾讯云全栈程序员站长Python贪吃蛇 (完整代码+详细注释+粘贴即食）关注作者前往小程序，Get更优阅读体验！立即前往腾讯云开发者社区文档建议反馈控制台登录/注册首页学习活动专区工具TVP最新优惠活动文章/答案/技术大牛搜索搜索关闭发布首页学习活动专区工具TVP最新优惠活动返回腾讯云官网全栈程序员站长首页学习活动专区工具TVP最新优惠活动返回腾讯云官网社区首页 >专栏 >Python贪吃蛇 (完整代码+详细注释+粘贴即食）Python贪吃蛇 (完整代码+详细注释+粘贴即食）全栈程序员站长关注发布于 2022-08-28 12:09:4414.2K2发布于 2022-08-28 12:09:44举报文章被收录于专栏：全栈程序员必看大家好，又见面了，我是你们的朋友全栈君。   文章目录代码运行截图笔记补充参考博客（阿里嘎多！）代码代码语言：javascript复制\n```code\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# author：Wangdali time:2021年1月20日16:08:44\n#python实现：贪吃蛇\n''' 游戏玩法：回车开始游戏；空格暂停游戏/继续游戏；方向键/wsad控制小蛇走向 '''\n''' 思路：用列表存储蛇的身体；用浅色表示身体，深色背景将身体凸显出来； 蛇的移动：仔细观察，是：身体除头和尾不动、尾部消失，头部增加，所以，新添加的元素放在列表头部、删除尾部元素； 游戏结束判定策略：超出边界；触碰到自己的身体：蛇前进的下一格子为身体的一部分（即在列表中）。 '''\n#注：因为在列表中需要频繁添加和删除元素，所以用deque容器代替列表；是因为deque具有高效的插入和删除效率\n#初始化蛇，长度为3，放置在屏幕左上角；\n#导包\nimport random\nimport sys\nimport time\nimport pygame\nfrom pygame.locals import *\nfrom collections import deque\n#基础设置\nScreen_Height=480\nScreen_Width=600\nSize=20#小方格大小\nLine_Width=1\n#游戏区域的坐标范围\nArea_x=(0,Screen_Width//Size-1) #0是左边界，1是右边界 #注：python中//为整数除法；/为浮点数除法\nArea_y=(2,Screen_Height//Size-1)\n#食物的初步设置\n#食物的分值+颜色\nFood_Style_List=[(10,(255,100,100)),(20,(100,255,100)),(30,(100,100,255))]\n#整体颜色设置\nLight=(100,100,100)\nDark=(200,200,200)\nBlack=(0,0,0)\nRed=(200,30,30)\nBack_Ground=(40,40,60)\n#文本输出格式设置\ndef Print_Txt(screen,font,x,y,text,fcolor=(255,255,255)):\n#font.render参数意义：.render（内容，是否抗锯齿，字体颜色，字体背景颜色）\nText=font.render(text,True,fcolor)\nscreen.blit(Text,(x,y))\n#初始化蛇\ndef init_snake():\nsnake=deque()\nsnake.append((2,Area_y[0]))\nsnake.append((1,Area_y[0]))\nsnake.append((0,Area_y[0]))\nreturn snake\n#食物设置\n#注意需要对食物出现在蛇身上的情况进行判断\ndef Creat_Food(snake):\n''' 注：randint 产生的随机数区间是包含左右极限的， 也就是说左右都是闭区间的[1, n]，能取到1和n。 而 randrange 产生的随机数区间只包含左极限， 也就是左闭右开的[1, n)，1能取到，而n取不到。randint 产生的随机数是在指定的某个区间内的一个值， 而 randrange 产生的随机数可以设定一个步长，也就是一个间隔。 '''\nfood_x=random.randint(Area_x[0],Area_x[1]) #此处有疑问\nfood_y=random.randint(Area_y[0],Area_y[1])\n#如果食物出现在蛇上，重来；\nwhile(food_x,food_y)in snake:\nfood_x = random.randint(Area_x[0], Area_x[1])\nfood_y = random.randint(Area_y[[0], Area_y[1]])\nreturn food_x,food_y\n#食物风格\ndef Food_Style():\nreturn Food_Style_List[random.randint(0,2)] #返回随机的分值和颜色\ndef main():\npygame.init()\nscreen=pygame.display.set_mode((Screen_Width,Screen_Height)) #初始化一个准备显示的窗口或屏幕\npygame.display.set_caption('贪吃蛇') #Set the current window caption\n#得分字体设置\nfont1=pygame.font.SysFont('SimHei',24)\n#GO字体设置\nfont2 = pygame.font.SysFont(None, 72)\nfwidth, fheight = font2.size('GAME OVER') ###\n#程序bug修复：如果蛇在向右移动，快速点击分别施加向下、向左的命令，向下的命令会被覆盖，只有向左的命令被接受，直接GameOver\n# b变量为了防止这个情况发生\nb=True\n#蛇\nsnake=init_snake()\n#食物\nfood=Creat_Food(snake)\nfood_style=Food_Style()\n#方向控制\npos=(1,0) ###\n#启动游戏相关变量初始化\ngame_over=True  #结束标志 # 是否开始，当start = True，game_over = True 时，才显示 GAME OVER\ngame_start=False    #开始标志\nscore=0 #得分\norispeed=0.3  #蛇初始速度\nspeed=orispeed  #蛇速度\nlast_move_time=None\npause=False #暂停\nwhile True:\nfor event in pygame.event.get():\nif event.type==QUIT:\nsys.exit()\nelif event.type==KEYDOWN:\nif event.key==K_RETURN:\nif game_over:\ngame_start=True\ngame_over=False\nb=True\nsnake=init_snake()\nfood=Creat_Food(snake)\nfood_style=Food_Style()\npos=(1,0)\n#得分\nscore=0\nlast_move_time=time.time()\nelif event.key==K_SPACE:\nif not game_over:\npause=not pause\n#以下为防止蛇在向右移动时按向左键，导致GameOver\nelif event.key in (K_UP,K_w):\nif b and not pos[1]: ###\npos=(0,-1)\nb=False\nelif event.key in (K_DOWN,K_s):\nif b and not pos[1]:\npos = (0, 1)\nb = False\nelif event.key in (K_LEFT,K_a):\nif b and not pos[0]:\npos = (-1, 0)\nb = False\nelif event.key in (K_RIGHT,K_d):\nif b and not pos[0]:\npos = (1, 0)\nb = False\n#填充背景色\nscreen.fill(Back_Ground)\n###\n#画网格线、竖线\nfor x in range(Size, Screen_Width, Size):\npygame.draw.line(screen, Black, (x, Area_y[0] * Size), (x, Screen_Height), Line_Width)\n#画网格线、横线\nfor y in range(Area_y[0] * Size, Screen_Height, Size):\npygame.draw.line(screen, Black, (0, y), (Screen_Width, y), Line_Width)\n#蛇的爬行过程\nif not game_over:\ncurTime=time.time()\nif curTime-last_move_time>speed: ###\nif not pause:\nb=True\nlast_move_time=curTime\nnext_s = (snake[0][0] + pos[0], snake[0][1] + pos[1])\n#如果吃到了食物\nif next_s==food:\nsnake.appendleft(next_s)\nscore+=food_style[0]\nspeed = orispeed - 0.03 * (score // 100)\nfood = Creat_Food(snake)\nfood_style = Food_Style()\nelse:\n#在区域内\nif Area_x[0]<=next_s[0]<=Area_x[1] and Area_y[0]<=next_s[1]<=Area_y[1] and next_s not in snake:\nsnake.appendleft(next_s)\nsnake.pop()\nelse :\ngame_over=True\n#画食物\nif not game_over:\n''' rect(Surface,color,Rect,width=0) 第一个参数指定矩形绘制到哪个Surface对象上 第二个参数指定颜色 第三个参数指定矩形的范围（left，top，width，height） 第四个参数指定矩形边框的大小（0表示填充矩形） 例如绘制三个矩形： pygame.draw.rect(screen, BLACK, (50, 50, 150, 50), 0) pygame.draw.rect(screen, BLACK, (250, 50, 150, 50), 1) pygame.draw.rect(screen, BLACK, (450, 50, 150, 50), 10) '''\n# 避免 GAME OVER 的时候把 GAME OVER 的字给遮住了\npygame.draw.rect(screen, food_style[1], (food[0] * Size, food[1] * Size, Size, Size), 0)\n#画蛇\nfor s in snake:\npygame.draw.rect(screen, Dark, (s[0] * Size + Line_Width, s[1] * Size + Line_Width,\nSize - Line_Width * 2, Size - Line_Width * 2), 0)\nPrint_Txt(screen, font1, 30, 7, f'速度: {score // 100}')\nPrint_Txt(screen, font1, 450, 7, f'得分: {score}')\n#画GameOver\nif game_over:\n\nif game_start:\n#print('GameOver')\nPrint_Txt(screen, font2, (Screen_Width - fwidth) // 2, (Screen_Height - fheight) // 2, 'GAME OVER',Red)\npygame.display.update()\nif __name__=='__main__':\nmain()\n```\n运行截图笔记补充1）\n蛇的移动,首先根据方向来判断，这里使用pos变量来记录方向\npos(1, 0) //表示当前蛇向右的方向\npos(-1, 0) //表示当前蛇向左的方向\npos(0, 1) //表示当前蛇向下的方向\npos(0, -1) //表示当前蛇向上的方向\n2）\n怎么能控制蛇的速度呢？\n其实是控制时间来刷新，我们知道所有的动作都在一个循环里面完成的，也就是代码都一直在运行着。比如我设置速度为1，表示一秒刷新一次，那么蛇的移动也就是一秒一次，我们看到的也是一秒移动一格。当我们设置速度为0.5,表示0.5秒刷新一次，那我们就看到0.5秒移动一格，速度就相对地看起来快了。参考博客（阿里嘎多！）1、博客A\n2、博客B发布者：全栈程序员栈长，转载请注明出处：https://javaforall.cn/146234.html原文链接：https://javaforall.cn本文参与 腾讯云自媒体同步曝光计划，分享自作者个人站点/博客。 原始发表：2022年5月1，如有侵权请联系 cloudcommunity@tencent.com 删除前往查看javahttps网络安全本文分享自 作者个人站点/博客 前往查看如有侵权，请联系 cloudcommunity@tencent.com 删除。本文参与 腾讯云自媒体同步曝光计划  ，欢迎热爱写作的你一起参与！javahttps网络安全评论登录后参与评论0 条评论热度最新登录 后参与评论推荐阅读LV.文章0获赞0目录文章目录代码运行截图笔记补充参考博客（阿里嘎多！）相关产品与服务容器服务腾讯云容器服务（Tencent Kubernetes Engine, TKE）基于原生 kubernetes 提供以容器为核心的、高度可扩展的高性能容器管理服务，覆盖 Serverless、边缘计算、分布式云等多种业务部署场景，业内首创单个集群兼容多种计算节点的容器资源管理模式。同时产品作为云原生 Finops 领先布道者，主导开源项目Crane，全面助力客户实现资源优化、成本控制。产品介绍产品文档11.11 上云拼团GO社区技术文章技术问答技术沙龙技术视频学习中心技术百科技术专区活动自媒体同步曝光计划邀请作者入驻自荐上首页技术竞赛资源技术周刊社区标签开发者手册开发者实验室关于社区规范免责声明联系我们友情链接腾讯云开发者扫码关注腾讯云开发者领取腾讯云代金券热门产品域名注册云服务器区块链服务消息队列网络加速云数据库域名解析云存储视频直播热门推荐人脸识别腾讯会议企业云CDN加速视频通话图像分析MySQL 数据库SSL 证书语音识别更多推荐数据安全负载均衡短信文字识别云点播商标注册小程序开发网站监控数据迁移Copyright © 2013 - 2024 Tencent Cloud. All Rights Reserved. 腾讯云 版权所有 深圳市腾讯计算机系统有限公司 ICP备案/许可证号：粤B2-20090059 深公网安备号 44030502008569腾讯云计算（北京）有限责任公司 京ICP证150476号 |  京ICP备11018762号 | 京公网安备号11010802020287问题归档专栏文章快讯文章归档关键词归档开发者手册归档开发者手册 Section 归档Copyright © 2013 - 2024 Tencent Cloud.All Rights Reserved. 腾讯云 版权所有登录 后参与评论2020推荐"}
